The idea of the One Time Use Circuit to secure IoT device identities on a blockchain was born from a desire to create a paper cryptocurrency for use in poor and developing countries. As i thought through the idea of a verifiable paper denomination of cryptocurrency (BTC in this case), the only way that I could think of to preserve the BTC backing of a paper note was to render the note unusable by destroying the public key (used to verify the note was backed by BTC) to obtain the private key (to sweep the funds from the TC address that held the backing for the note). By rendering the note unusable, and therefore un-re-ciruitable (is that even a word?), would mean someone would have to print the private key and the public key if different layers on the note (like a scratch ticket, scratch off the public key to reveal the private key, the bill is no longer usable), however, this would require an entity to print the paper notes with the keypairs already generated leaving a gaping hole in security, i.e. any entity printing the notes would have knowledge of the private keys that controlled the funds on the paper bills. To overcome this issue, I am proposing a circuit design for any IoT device writing to a blockchain that meets the following criteria:

  - Receives multiple environmental inputs (magnetometer, accelerometer, microphone, GPS, timestamp, etc.) to generate random seed for keypair generation.
  - Loads the private key into a tamper-proof ROM that can only be accessed by the on-board IoT hardware to sign transactions as coming from that IoT device.
  - The first transaction from the IoT device is to identify itself to it's parent and establish a parent-child key relationship (this establishes ownership of the device much in the same way one can use a different, but known nonce and a common seed to produce unique keypairs).
  - The sensors and other hardware used in the first step are destroyed instantaneously upon generation of the keypair. Reversing the DC current through the circuit or possibly a micro-pellet of acid could destroy the circuitry rendering duplication of the seed data impossible.
  - The tamper-proof memory will need a similar safeguard, like encapsulation within a corrosive layer, if breached, destroys the memory.
